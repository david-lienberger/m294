{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E536454\\\\Desktop\\\\\\xFCK Frontend\\\\m294\\\\departure\\\\src\\\\components\\\\connections\\\\connections.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ConnectionsService from '../../services/connections.service';\nimport ConnectionComponent from '../connection/connection.component';\nimport { Alert } from 'react-bootstrap';\nimport ToastService from '../../services/toast.service';\nimport './connections.component.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ConnectionsComponent(_ref) {\n  _s();\n  let {\n    connectionsList\n  } = _ref;\n  const connectionsService = new ConnectionsService();\n  const toastService = new ToastService();\n  const [connections, setConnections] = useState(undefined);\n  useEffect(() => {\n    setConnections(connectionsList);\n  }, [connectionsList]);\n  function deleteConnection(id) {\n    connectionsService.deleteConnection(id).then(res => {\n      console.info(res);\n      toastService.emit('Verbindung gelöscht.', 'success');\n    }).catch(err => {\n      console.error(err);\n    });\n    setConnections(connections.filter(connection => connection.id !== id));\n  }\n  function saveConnection(from, to) {\n    connectionsService.addConnection(from, to).then(res => {\n      console.info(res);\n      toastService.emit('Verbindung gespeichert.', 'success');\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n  if (connections && connections.length > 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"connection-list\",\n        children: connections.map((connection, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ConnectionComponent, {\n              connection: connection,\n              deleteConnection: deleteConnection,\n              saveConnection: saveConnection\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      variant: 'primary',\n      children: \"Es k\\xF6nnen keine Verbindungen geladen werden.\"\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ConnectionsComponent, \"uqVnwhj9Lmz93dr88ZIN2wCSfmE=\");\n_c = ConnectionsComponent;\nvar _c;\n$RefreshReg$(_c, \"ConnectionsComponent\");","map":{"version":3,"names":["React","useEffect","useState","ConnectionsService","ConnectionComponent","Alert","ToastService","jsxDEV","_jsxDEV","Fragment","_Fragment","ConnectionsComponent","_ref","_s","connectionsList","connectionsService","toastService","connections","setConnections","undefined","deleteConnection","id","then","res","console","info","emit","catch","err","error","filter","connection","saveConnection","from","to","addConnection","length","children","map","key","fileName","_jsxFileName","lineNumber","columnNumber","variant","_c","$RefreshReg$"],"sources":["C:/Users/E536454/Desktop/üK Frontend/m294/departure/src/components/connections/connections.component.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ConnectionsService from '../../services/connections.service';\r\nimport ConnectionComponent from '../connection/connection.component';\r\nimport { Alert } from 'react-bootstrap';\r\nimport ToastService from '../../services/toast.service';\r\nimport './connections.component.scss';\r\n\r\nexport default function ConnectionsComponent({ connectionsList }) {\r\n  const connectionsService = new ConnectionsService();\r\n  const toastService = new ToastService();\r\n  const [connections, setConnections] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    setConnections(connectionsList);\r\n  }, [connectionsList]);\r\n\r\n  function deleteConnection(id) {\r\n    connectionsService.deleteConnection(id).then((res) => {\r\n      console.info(res);\r\n      toastService.emit('Verbindung gelöscht.', 'success');\r\n    }).catch((err) => {\r\n      console.error(err);\r\n    });\r\n    setConnections(\r\n      connections.filter((connection) => connection.id !== id),\r\n    );\r\n  }\r\n\r\n  function saveConnection(from, to) {\r\n    connectionsService.addConnection(from, to).then((res) => {\r\n      console.info(res);\r\n      toastService.emit('Verbindung gespeichert.', 'success');\r\n    }).catch((err) => {\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  if (connections && connections.length > 0) {\r\n    return (\r\n      <>\r\n        <div id='connection-list'>\r\n          {\r\n            connections.map((connection, key) => {\r\n              return (\r\n                <div key={key}>\r\n                  <ConnectionComponent connection={connection} deleteConnection={deleteConnection}\r\n                                       saveConnection={saveConnection}></ConnectionComponent>\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Alert key={1} variant={'primary'}>Es können keine Verbindungen geladen werden.</Alert>\r\n    </>\r\n  );\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}